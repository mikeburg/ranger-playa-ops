#
# Docker Compose for on playa operations
#
# Exposed docker ports
#
# 80: Nginx (http) for Clubhouse & IMS, redirects to https
# 443: Nginx (https) for Clubhouse  & IMS
#
# 8306: Clubhouse/IMS/Radio Monitor database, localhost only for monit
# 8400: IMS localhost only for monit 
# 8100: Clubhouse frontend, localhost only for monit
# 8025: SMTPD, localhost only for monit
# 8587: SMTPD (tls), localhost only for monit
# 9200: Last Caller frontend
# 9300: Last Caller backend, web server
# 9301: Last Caller backend, web socket (stream)
# 9306: Radio GPS Logger database, connected to by a server at the Lighthouse
# 9500: Nginx http only for WordPress. Will bind only to the DHCP local playa IP address

name: ranger

services:
  # Clubhouse backend (API)
  api:
    hostname: api
    build:
      context: ./src/api
      dockerfile: Dockerfile
    image: apiserver:prod
    env_file: .rangers.env
    tty: true
    ports:
      - "127.0.0.1:8200:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./data/photos:/var/www/application/storage/photos
    depends_on:
      - db
    restart: unless-stopped

  # Clubhouse 2 frontend
  client:
    hostname: client
    build:
      context: ./src/client
      dockerfile: Dockerfile
    image: client:prod
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:8100:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4

  # IMS server
  ims:
    hostname: ims
    build:
      context: ./src/ranger-ims-server
      dockerfile: Dockerfile
    env_file: .rangers.env
    image: ims:prod
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:8400:80"
    volumes:
      - ./data/ims:/external
    dns:
      - 8.8.8.8
      - 8.8.4.4


  # Web server for the Clubhouse and NGINX
  nginx:
    hostname: nginx
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    image: nginx:prod
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./data/certs:/etc/nginx/certs
      - ./data/photos:/photos
    depends_on:
      - api
      - client

  # Database for the Clubhouse and IMS
  db:
    hostname: db
    image: mariadb:10.5.23
    env_file: .rangers.env
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:8306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql

  # Radio GPS Logger DB
  #radio-gps-db:
  #  image: mariadb:10.5.23
  #  env_file: .radio-gps.env
  #  restart: unless-stopped
  #  tty: true
  #  ports:
  #    - "9306:3306"
  #  volumes:
  #    - ./data/radio-gps-db:/var/lib/mysql

  # Last Caller radio call database
  last-caller-db:
    hostname: last-caller-db
    image: mariadb:10.5.23
    env_file: .last-caller.env
    restart: unless-stopped
    tty: true
    ports:
      - "9310:3306"
    volumes:
      - ./data/last-caller-db:/var/lib/mysql

  # SMTP Relay Server to AWS SES. This allows the Clubhouse to send mail without having
  # to worry if the Internet link drops out, if SES throttling limits are reached, and/or
  # tying up a worker thread.
  # The RBS can potentially generate close to 1,000+ messages in one go when sending an emergency broadcast.
  smtpd:
    hostname: smtpd
    build:
      context: ./services/smtpd
      dockerfile: Dockerfile
    image: smtpd:prod
    tty: true
    restart: unless-stopped
    ports:
      - "127.0.0.1:8587:587"
      - "127.0.0.1:8025:25"
    env_file: .rangers.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      HOSTNAME: "ranger-clubhouse.nv.burningman.org"
      MASQUERADED_DOMAINS: "burningman.org"
      ALLOWED_SENDER_DOMAINS: "burningman.org"
      RELAYHOST: "[email-smtp.us-west-2.amazonaws.com]:587"

    volumes:
      - ./data/postfix:/var/spool/postfix

  # Last Caller frontend
  # Port 9200
  last-caller-app:
    hostname: last-caller-app
    build:
      context: ./src/last-caller-app
      dockerfile: Dockerfile
    image: last-caller-app:prod
    tty: true
    restart: unless-stopped
    ports:
      - "9200:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4

  # Last Caller backend
  # port 9300, web server requests
  # Port 9301, web socket live feed
  last-caller-backend:
    hostname: last-caller-backend
    build:
      context: ./src/radio-server
      dockerfile: Dockerfile
    image: last-caller-backend:prod
    env_file: .last-caller.env
    tty: true
    restart: unless-stopped
    ports:
      - "9300:9300"
      - "9301:9301"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db

  # Database instance for WordPress
  wordpress-db:
    hostname: wordpress-db
    env_file: .wordpress.env
    image: mariadb:10.5.23
    container_name: wordpress-db
    restart: unless-stopped
    volumes:
      - ./data/wordpress-db:/var/lib/mysql

  # WordPres itself
  wordpress:
    hostname: wordpress
    env_file: .wordpress.env
    depends_on:
      - wordpress-db
    image: wordpress:6.6.0-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    volumes:
      - ./data/wordpress:/var/www/html

  # Nginx frontend for WordPress
  wordpress-nginx:
    hostname: wordpress-nginx
    depends_on:
      - wordpress
    image: nginx:1.26.1-alpine
    container_name: wordpress-webserver
    restart: unless-stopped
    ports:
      - "9500:80"
    volumes:
      - ./data/wordpress:/var/www/html
      - ./services/wordpress-nginx:/etc/nginx/conf.d

